{"version":3,"sources":["components/terminal/TerminalHeader.js","config/api.js","types/commands.js","actions/directory.js","config/endpoints.js","types/action/directory.js","components/terminal/CommandLine.js","actions/commands.js","types/action/commands.js","actions/response.js","types/action/responses.js","types/action/errors.js","components/terminal/CommandResponse.js","components/terminal/TerminalShell.js","components/terminal/Terminal.js","components/footer/Footer.js","components/App.js","reducers/directory.js","reducers/index.js","reducers/commands.js","reducers/responses.js","index.js"],"names":["useStyles","makeStyles","theme","main","height","background","width","borderRadius","exit","minimize","maximize","buttons","marginTop","marginRight","display","TerminalHeader","classes","btnExit","classNames","btnMinimize","btnMaximize","className","httpClient","axios","create","baseURL","responseType","CD_HELP","fetchDirectoryContent","dispatch","getState","dir","directory","currentDirectory","console","log","indexOf","replaceAll","endpoint","get","then","res","fetchDirectoryContentSucceeded","data","content","type","payload","changeDirectory","createMuiTheme","overrides","MuiInputBase","input","fontFamily","color","variable","cmd","flex","user","overflow","prompt","alignItems","CommandLine","cmdProps","useDispatch","useState","command","setCommand","args","status","Box","flexdirection","ThemeProvider","TextField","fullWidth","id","autoComplete","value","onChange","event","target","disabled","onKeyUp","e","key","line","words","split","arg","slice","length","show","sendCommand","response","sendResponse","commands","map","index","lastIndexOf","newDir","endsWith","includes","sendCommandNotFound","textField","InputProps","style","padding","disableUnderline","file","folder","CommandResponse","responseProps","error","help","forEach","commandDescription","push","splice","folderAndFiles","item","history","i","Response","textAlign","welcome","shell","TerminalShell","useSelector","state","responses","align","rows","CMD","conditions","shown","marginBottom","Terminal","useEffect","Footer","App","container","initialStateCurrentDirectory","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8da2945a.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport classNames from 'classnames'\n\nconst useStyles = makeStyles((theme) => ({\n    main: {\n        height: 20,\n        background: '#00A8E8',\n        width: '100%',\n        borderRadius: '8px 8px 0 0',\n    },\n    exit: {\n        background: \"#FFFFFF\"\n    },\n    minimize: {\n        background:\"#003459\"\n    },\n    maximize: {\n        background: \"#00171F\"\n    },\n    buttons: {\n        width: 10,\n        height: 10,\n        marginTop: 5,\n        marginRight: 10,\n        display: \"inline-block\",\n        borderRadius: 8\n    }\n}))\nconst TerminalHeader = () => {\n    const classes = useStyles();\n    const btnExit = classNames(classes.buttons,classes.exit)\n    const btnMinimize = classNames(classes.buttons,classes.minimize)\n    const btnMaximize = classNames(classes.buttons,classes.maximize)\n\n    return (\n        <div className={classes.main}>\n            <span className={btnExit}></span>\n            <span className={btnMinimize}></span>\n            <span className={btnMaximize}></span>\n        </div>\n    )\n}\n\nexport default TerminalHeader;\n","import axios from 'axios';\n\nconst LOCAL_API_HOST = 'http://localhost:3000';\nconst baseURL = LOCAL_API_HOST;\n\nconst httpClient = axios.create({\n    baseURL,\n    responseType: \"json\"\n\n});\n\nexport default httpClient;\n","export const LS = 'ls';\nexport const CD = 'cd';\nexport const HELP = 'help';\nexport const HISTORY = 'history';\nexport const CLEAR = 'clear';\nexport const CAT = 'cat';\nexport const LS_HELP = ' ls: List all files and folders in this directory'\nexport const CD_HELP = [' cd:', ' cd: Change directory to ROOT','cd .. : Move up one level from the current directory','cd [FOLDER]: Change directory to this folder']\nexport const HISTORY_HELP = ' history: List all commands used'\nexport const CLEAR_HELP = ' clear: Clear terminal from all commands'\nexport const CAT_HELP = 'cat [FILE]: print the content of the file'\nexport const NOT_FOUND = 'command not found'\nexport const DIR_NOT_FOUND = 'No such directory'\n","import {\n    CHANGE_DIRECTORY,\n    COMMAND_FAILED,\n    COMMAND_COMPLETED, FETCH_DIRECTORY,\n} from \"../types/action\";\n\nimport {DIRECTORIES} from \"../config\";\nimport httpClient from \"../config/api\";\nimport {CD, LS} from \"../types/commands\";\n\n\n\nconst fetchDirectoryContent = () => (dispatch,getState) => {\n\n    let dir = getState().directory.currentDirectory\n\n    console.log(dir)\n    const root = 'root'\n\n    if(dir.indexOf('/')!==-1) {\n        dir = dir.replaceAll('/', '%2F')\n    }\n    const directory = `${root}%2F${dir}`\n\n    const endpoint = `${DIRECTORIES}/${directory}`;\n\n    httpClient.get(endpoint).then(res => {\n        dispatch(fetchDirectoryContentSucceeded(res.data,dir))\n    })\n}\n\nconst fetchDirectoryContentSucceeded = (content,dir) => (\n    {\n        type: FETCH_DIRECTORY,\n        payload: {\n            content,\n            directory:dir\n        }\n    })\n\nconst changeDirectory = (dir) => (dispatch) => {\n    console.log(dir)\n    dispatch({\n        type: CHANGE_DIRECTORY,\n        payload: {\n            directory:dir\n        }\n    })\n    dispatch(fetchDirectoryContent())\n}\nexport { fetchDirectoryContent,changeDirectory};\n","export const DIRECTORIES = '/directories';\n","export const CHANGE_DIRECTORY = 'CHANGE_DIRECTORY'\nexport const FETCH_DIRECTORY = 'FETCH_DIRECTORY'\n","import React, {useState} from 'react';\nimport {TextField, makeStyles, createMuiTheme, Box, ThemeProvider} from '@material-ui/core';\nimport {useDispatch} from 'react-redux';\nimport './TerminalShell.css'\nimport {\n    fetchDirectoryContent,\n    sendCommand,\n    sendEmptyCommand,\n    sendCommandNotFound,\n    sendResponse,\n    sendClearCommand,\n    sendHistoryCommand, changeDirectory, sendLSCommand, sendCDCommand\n} from '../../actions'\nimport {CD_HELP, HELP, LS, LS_HELP, HISTORY_HELP, CAT_HELP, CLEAR_HELP, CLEAR, HISTORY, CD} from \"../../types/commands\";\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiInputBase: {\n            input: {\n                fontFamily: 'Fira Code',\n                color: 'white',\n                width: '100%',\n            }\n        }\n    }\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n    directory: {\n        color: '#00a8e8'\n    },\n    variable: {\n        marginRight: 0\n    },\n    cmd: {\n        color: \"white\",\n        height: 20,\n        flex: '1',\n\n    },\n    user: {\n        flex: '0 1 auto',\n        overflow: 'hidden',\n        marginRight: 10\n    },\n    prompt: {\n        alignItems: 'flex-start',\n        fontFamily: 'Fira Code',\n\n    }\n}))\nconst CommandLine = ({cmdProps}) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [command,setCommand] = useState(cmdProps.cmd);\n    const [args,setArgs] = useState(cmdProps.args);\n    const directory = cmdProps.dir\n    const status = !cmdProps.status;\n    const handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            setCommand('')\n            const line = e.target.value\n            const words = line.split(' ');\n            const cmd = words[0];\n            const arg = line.slice(cmd.length+1);\n            dispatch(sendCommand(words[0], arg, false, true));\n\n\n            switch(cmd) {\n                case HELP:\n                    dispatch(sendResponse([LS_HELP,CD_HELP,HISTORY_HELP,CAT_HELP,CLEAR_HELP],HELP))\n                    break;\n                case LS:\n                    dispatch(sendLSCommand())\n                    break;\n                case HISTORY:\n                    dispatch(sendHistoryCommand())\n                    break;\n                case CLEAR:\n                    dispatch(sendClearCommand())\n                    break;\n                case CD:\n                    dispatch(sendCDCommand(arg))\n                    break;\n                case '':\n                    dispatch(sendEmptyCommand())\n                    break;\n                default:\n                    dispatch(sendCommandNotFound(cmd))\n            }\n\n\n        }\n    }\n\n    const handleChange = (event) => {\n        setCommand(event.target.value);\n    };\n\n    return (\n        <Box display=\"flex\" flexdirection=\"row\" className={classes.prompt}>\n            <Box className={classes.user}>\n                <span>root@HadiKhai: </span>\n                <span className={classes.directory}> ~{directory}</span>\n                <span className={classes.variable}>$ </span>\n            </Box>\n            <Box className={classes.cmd}>\n                <ThemeProvider theme={theme}>\n                    <TextField\n                        fullWidth\n                        id=\"cmd\"\n                        autoComplete='off'\n                        value={status? `${command} ${args}` : command}\n                        onChange={handleChange}\n                        disabled={status}\n                        onKeyUp={handleKeyPress}\n                        height={20}\n                        className={classes.textField}\n                        InputProps={{\n                            style: {\n                                height: 20,\n                                padding: '0 0 0 0',\n                            },\n                            disableUnderline: true,\n                        }}\n                    />\n                </ThemeProvider>\n            </Box>\n        </Box>\n    )\n\n\n}\n\nexport default CommandLine;\n","import {\n    SEND_CMD,\n    COMMAND_NOT_FOUND,\n    COMMAND_EMPTY,\n    CLEAR_CMD,\n    COMMAND_COMPLETED,\n    CHANGE_DIRECTORY, LS_CMD, DIRECTORY_NOT_FOUND\n} from \"../types/action\";\nimport {CD, CLEAR, DIR_NOT_FOUND, HISTORY, LS, NOT_FOUND} from \"../types/commands\";\nimport {changeDirectory} from \"./directory\";\n\nconst sendCommand = (cmd,args,status,show) => (dispatch,getState) =>{\n\n    const dir = getState().directory.currentDirectory;\n    dispatch({\n        type: SEND_CMD,\n        payload: {\n            cmd,\n            args,\n            dir,\n            status,\n            show\n        }\n    })\n}\n\nconst sendClearCommand = () => dispatch => {\n    dispatch({\n        type: CLEAR_CMD,\n    })\n    dispatch({\n        type: COMMAND_COMPLETED,\n        payload: {\n            content: '',\n            cmd: CLEAR\n        }\n    })\n}\n\nconst sendLSCommand = () =>  (dispatch,getState) => {\n    const content = getState().directory.content;\n\n    dispatch({\n        type:COMMAND_COMPLETED,\n        payload: {\n            cmd: LS,\n            content\n        }\n    })\n}\n\nconst sendHistoryCommand = () => (dispatch,getState) => {\n    const history = getState().commands.map(data => data.cmd);\n\n    dispatch({\n        type: COMMAND_COMPLETED,\n        payload: {\n            content: history,\n            cmd: HISTORY\n        }\n    })\n}\n\nconst sendCDCommand = (dir) => (dispatch,getState) => {\n\n    const content = getState().directory.content;\n    const currentDirectory = getState().directory.currentDirectory;\n    console.log(dir)\n    if(dir==='..'){\n        const index = currentDirectory.lastIndexOf('/')\n        console.log(index)\n            if(index==-1){\n                dispatch(changeDirectory(''))\n            }\n            else{\n                const newDir = currentDirectory.slice(0,index);\n                dispatch(changeDirectory(newDir))\n            }\n    }\n    else if(dir.endsWith('txt') || !content.includes(dir)){\n        dispatch({\n            type: DIRECTORY_NOT_FOUND,\n            payload: {\n                cmd: CD,\n                content: DIR_NOT_FOUND,\n                dir\n            }\n        })\n        return\n    }\n    else{\n        const newDir = `${currentDirectory}/${dir}`;\n        dispatch(changeDirectory(newDir))\n    }\n\n    dispatch({\n        type:COMMAND_COMPLETED,\n        payload: {\n            cmd: CD,\n        }\n    })\n}\n\nconst sendCommandNotFound = (cmd) => dispatch => {\n    dispatch({\n        type: COMMAND_NOT_FOUND,\n        payload: {\n            content: NOT_FOUND,\n            cmd\n        }\n    })\n}\n\nconst sendEmptyCommand = () => dispatch => {\n    dispatch({\n        type: COMMAND_EMPTY\n    })\n}\n\n\nexport {sendCommand,sendEmptyCommand,sendCommandNotFound,sendClearCommand,sendHistoryCommand,sendLSCommand,sendCDCommand};\n\n","export const SEND_CMD = 'SEND_CMD';\nexport const CLEAR_CMD = 'CLEAR_CMD'\nexport const HISTORY_CMD = 'HISTORY_CMD'\nexport const LS_CMD = 'LS_CMD'\n","import { COMMAND_COMPLETED } from \"../types/action\";\n\nconst sendResponse = (response,cmd) => dispatch =>\n    dispatch({\n        type: COMMAND_COMPLETED,\n        payload: {\n            content: response,\n            cmd\n        }\n    })\n\n\n\nexport {sendResponse};\n","export const COMMAND_COMPLETED = 'COMMAND_COMPLETED'\nexport const COMMAND_FAILED = 'COMMAND_FAILED'\n","export const COMMAND_EMPTY = 'COMMAND_EMPTY';\nexport const COMMAND_NOT_FOUND = 'COMMAND_NOT_FOUND';\nexport const DIRECTORY_NOT_FOUND = 'DIRECTORY_NOT_FOUND'\n","import React from 'react';\nimport {makeStyles, Box} from '@material-ui/core';\nimport './TerminalShell.css'\nimport {CD, HELP, HISTORY, LS} from \"../../types/commands\";\n\nconst useStyles = makeStyles(() => ({\n    prompt: {\n        color: \"white\",\n        alignItems: 'flex-start'\n    },\n    response: {\n        color: \"white\",\n        fontFamily: 'Fira Code'\n    },\n    file: {\n        color: 'white',\n        marginRight: 10\n    },\n    folder: {\n        color: '#00A8E8',\n        marginRight: 10\n    }\n}))\n\nconst CommandResponse = ({responseProps}) => {\n    const classes = useStyles();\n\n    const command = responseProps? responseProps.cmd:'';\n    const content = responseProps? responseProps.content:[];\n    const error = responseProps? responseProps.content:false;\n    const dir = responseProps? responseProps.dir:'';\n    const Response = () => {\n        switch(command) {\n            case HELP: {\n                const help = [];\n                content.forEach( commandDescription => {\n                    if(typeof commandDescription === 'string'){\n                        help.push(<li>{commandDescription}</li>)\n                    }\n                    if(typeof commandDescription === 'object'){\n                        help.push(<li>{commandDescription[0]}</li>)\n                        help.push(<ul>\n                           { [...commandDescription].splice(1).map(e =>\n                                <li>{e}</li>\n                            )}\n                        </ul>)\n                    }\n                })\n                return (\n                    <ul>\n                        {help}\n                    </ul>\n                )\n            }\n            case LS:{\n                const folderAndFiles = [];\n                content.map(item => {\n                    if(item.endsWith('.txt')){\n                        folderAndFiles.push(\n                            <span className={classes.file}>{item}</span>\n                        )\n                    }\n                    else{\n                        folderAndFiles.push(<span className={classes.folder}>{item}</span>);\n                    }\n\n                })\n                return (\n                    <p>{folderAndFiles}</p>\n                )\n            }\n\n            case HISTORY:{\n                const history = []\n\n                for(let i=0; i<content.length; i++){\n                    history.push(<span>{i+1} {content[i]} <br /></span>)\n                }\n                return (\n                    <span>\n                        {history}\n                    </span>\n                )\n            }\n            case CD:\n                if(error){\n                    return (\n                     <p>{command}: {dir}: {content}</p>\n                    )\n                }\n                return (\n                    <div></div>\n                )\n            case '':\n                return (\n                    <div></div>\n                )\n            default:\n                return <p>{command}: {content}</p>\n        }\n    }\n\n    return (\n        <Box display=\"flex\" flexdirection=\"row\" className={classes.prompt}>\n            <Box className={classes.cmd}>\n                <span>\n\n                    {Response()}\n\n                </span>\n            </Box>\n        </Box>\n    )\n\n\n}\n\nexport default CommandResponse;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Box from \"@material-ui/core/Container\";\nimport CommandLine from \"./CommandLine\";\nimport CommandResponse from \"./CommandResponse\";\n\nimport './TerminalShell.css';\n\nconst useStyles = makeStyles((theme) => ({\n    main: {\n        textAlign: 'left',\n        fontFamily: 'Fira Code',\n        overflow: 'auto',\n        width: '100%',\n        padding: 2,\n        background: '#007EA7',\n        color: '#00171F',\n        borderRadius: '0 0 10px 10px',\n        height: '80vh'\n\n    },\n    welcome: {\n        padding: '0',\n    },\n    shell: {\n        marginTop: 10\n    },\n    directory: {\n        color: '#00a8e8'\n    },\n    variable: {\n        marginRight: 10\n    },\n    cmd: {\n        color: \"white\"\n\n    },\n    line: {\n        width: '100%',\n    }\n}))\n\nconst TerminalShell = () => {\n    const classes = useStyles();\n    const commands = useSelector(state => state.commands);\n    const responses = useSelector(state => state.responses);\n    const currentDirectory = useSelector(state => state.directory.currentDirectory);\n    const CMD = () => {\n        const rows = [];\n        for(let i=0; i < commands.length; i++){\n            if(commands[i].show) {\n                rows.push(\n                    <div>\n                        <CommandLine cmdProps={commands[i]} key={`Line-${i}`}/>\n                        <CommandResponse responseProps={responses[i]} key={`Response-${i}`}/>\n                    </div>\n                )\n            }\n        }\n        return (<div>\n            {rows}\n        </div>)\n    }\n\n    const prompt = () => {\n        const conditions = {\n            cmd: '',\n            args: '',\n            dir: currentDirectory,\n            status: true,\n            shown: true\n        }\n\n        return (\n            <CommandLine cmdProps={conditions}/>\n        )\n    }\n\n    return (\n        <Box display=\"flex\" align=\"center\" flexdirection=\"column\" className={classes.main}>\n            <Box>\n                <p className={classes.welcome}>\n                    Hello World! Welcome to HadiKhai's CLI! To get started type 'help'\n                </p>\n            </Box>\n            <Box className={classes.shell}>\n                {CMD()}\n                {prompt()}\n            </Box>\n        </Box>\n    )\n}\n\nexport default TerminalShell;\n\n","import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from \"@material-ui/core/Container\";\nimport TerminalHeader from \"./TerminalHeader\";\nimport TerminalShell from \"./TerminalShell\";\nimport {useDispatch} from \"react-redux\";\nimport {fetchDirectoryContent} from \"../../actions\";\n\nconst useStyles = makeStyles(() => ({\n    main:{\n        marginBottom: 50\n    }\n}));\n\nconst Terminal = () => {\n    const dispatch = useDispatch();\n\n    useEffect( ()=> {\n        dispatch(fetchDirectoryContent())},[]\n    )\n\n\n    const classes = useStyles();\n    return (\n        <Box display=\"flex\" align=\"center\" flexdirection=\"column\" className={classes.main}>\n                <TerminalHeader />\n                <TerminalShell />\n        </Box>\n    )\n};\n\n\nexport default Terminal;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    main: {\n        color: 'white',\n        height: '100%',\n        width: '100%',\n    },\n}))\nconst Footer = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.main}>\n            <p> Made By HadiKhai</p>\n            <p> With React.JS</p>\n        </div>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Terminal from \"./terminal/Terminal\";\nimport Box from \"@material-ui/core/Container\";\nimport Footer from \"./footer/Footer\";\nconst useStyles = makeStyles((theme) => ({\n    main: {\n        background: '#003459',\n        height: '100%',\n        width: '100%',\n        fontFamily: 'Fira Code',\n        marginTop: '5vh',\n    }\n}))\nconst App = () => {\n\n    const classes = useStyles();\n\n    return (\n            <Box container='true' display=\"flex\" align=\"center\" flexdirection=\"column\" className={classes.main}>\n                    <Terminal/>\n                    <Footer/>\n            </Box>\n    )\n}\n\nexport default App;\n","import {CHANGE_DIRECTORY, FETCH_DIRECTORY} from \"../types/action\";\n\nconst initialStateCurrentDirectory = {\n    currentDirectory:'',\n    content:[]\n}\n\nexport default (state = initialStateCurrentDirectory,action) => {\n    switch(action.type) {\n        case CHANGE_DIRECTORY:\n            return {\n                ...state,\n                currentDirectory: action.payload.directory\n            }\n        case FETCH_DIRECTORY:{\n            return {\n                ...state,\n                content: action.payload.content\n            }\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport commands from './commands';\nimport directory from './directory';\nimport responses from './responses';\n\nexport default combineReducers({\n    commands,\n    responses,\n    directory\n})\n","import {SEND_CMD,CLEAR_CMD} from \"../types/action\";\n\n\nexport default (state = [] ,action) => {\n    switch (action.type){\n        case SEND_CMD:\n            return [...state, action.payload];\n        case CLEAR_CMD:\n            return state.map(commands =>\n                (\n                    {\n                        ...commands,\n                        show: false\n                    }\n                  )\n            )\n        default:\n            return state;\n    }\n\n}\n","import {\n    COMMAND_COMPLETED,\n    COMMAND_FAILED,\n    COMMAND_NOT_FOUND,\n    COMMAND_EMPTY,\n    CLEAR_CMD,\n    DIRECTORY_NOT_FOUND\n} from '../types/action'\n\nexport default  (state = [], action) => {\n    switch (action.type) {\n        case COMMAND_COMPLETED:\n            return[\n                ...state,\n                {\n                    error: action.payload.error,\n                    cmd: action.payload.cmd,\n                    content: action.payload.content\n                }\n\n            ];\n        case COMMAND_FAILED:\n            return [\n                ...state,\n                {\n                    cmd: action.payload.cmd,\n                    error: action.payload.error\n                }\n            ];\n        case COMMAND_NOT_FOUND:\n            return [\n                ...state,\n                {\n                    cmd: action.payload.cmd,\n                    content: action.payload.content,\n                    error: true\n                }\n            ];\n        case COMMAND_EMPTY:\n            return [\n                ...state,\n                {\n                    cmd: '',\n                    content: '',\n                    error: true\n                }\n            ];\n        case DIRECTORY_NOT_FOUND:\n            return [\n                ...state,\n                {\n                    cmd: action.payload.cmd,\n                    content: action.payload.content,\n                    dir: action.payload.dir,\n                }\n            ]\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport reducers from './reducers';\nimport './index.css'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunk)))\n\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>\n    ,document.querySelector('#root')\n)\n"],"sourceRoot":""}