{"version":3,"sources":["components/terminal/TerminalHeader.js","config/api.js","actions/directory.js","config/endpoints.js","types/action/directory.js","types/commands.js","components/terminal/CommandLine.js","actions/commands.js","types/action/commands.js","types/action/responses.js","types/action/errors.js","components/terminal/CommandResponse.js","components/terminal/TerminalShell.js","components/terminal/Terminal.js","components/footer/Footer.js","components/App.js","reducers/directory.js","reducers/index.js","reducers/commands.js","reducers/responses.js","index.js"],"names":["useStyles","makeStyles","theme","main","height","background","width","borderRadius","exit","minimize","maximize","buttons","marginTop","marginRight","display","TerminalHeader","classes","btnExit","classNames","btnMinimize","btnMaximize","className","httpClient","axios","create","baseURL","responseType","getBlob","method","fetchDirectoryContent","dispatch","getState","dir","directory","currentDirectory","indexOf","replaceAll","endpoint","get","then","res","fetchDirectoryContentSucceeded","data","content","type","payload","changeDirectory","CD_HELP","createMuiTheme","overrides","MuiInputBase","input","fontFamily","color","variable","cmd","flex","user","overflow","prompt","alignItems","CommandLine","cmdProps","useDispatch","useState","command","setCommand","args","status","Box","flexdirection","ThemeProvider","TextField","fullWidth","id","spellCheck","autoComplete","value","onChange","event","target","disabled","onKeyUp","e","key","line","words","split","arg","slice","length","show","sendCommand","commands","map","index","lastIndexOf","newDir","endsWith","includes","dirOrFile","error","file","downloadUrl","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","sendDownloadCommand","sendCommandNotFound","textField","InputProps","style","padding","disableUnderline","response","pdf","folder","photo","CommandResponse","responseProps","componentId","help","forEach","commandDescription","i","push","console","log","splice","j","folderAndFiles","item","history","links","Response","textAlign","welcome","shell","personal","TerminalShell","useSelector","state","responses","align","rows","CMD","conditions","shown","marginBottom","Terminal","useEffect","Footer","App","container","initialStateCurrentDirectory","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.76b2fa73.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport classNames from 'classnames'\n\nconst useStyles = makeStyles((theme) => ({\n    main: {\n        height: 20,\n        background: '#00A8E8',\n        width: '100%',\n        borderRadius: '8px 8px 0 0',\n    },\n    exit: {\n        background: \"#FFFFFF\"\n    },\n    minimize: {\n        background:\"#003459\"\n    },\n    maximize: {\n        background: \"#00171F\"\n    },\n    buttons: {\n        width: 10,\n        height: 10,\n        marginTop: 5,\n        marginRight: 10,\n        display: \"inline-block\",\n        borderRadius: 8\n    }\n}))\nconst TerminalHeader = () => {\n    const classes = useStyles();\n    const btnExit = classNames(classes.buttons,classes.exit)\n    const btnMinimize = classNames(classes.buttons,classes.minimize)\n    const btnMaximize = classNames(classes.buttons,classes.maximize)\n\n    return (\n        <div className={classes.main}>\n            <span className={btnExit}></span>\n            <span className={btnMinimize}></span>\n            <span className={btnMaximize}></span>\n        </div>\n    )\n}\n\nexport default TerminalHeader;\n","import axios from 'axios';\n\nconst LOCAL_API_HOST = '';\nconst baseURL = LOCAL_API_HOST;\n\nconst httpClient = axios.create({\n    baseURL,\n    responseType: \"json\"\n\n});\n\n\nconst getBlob = axios.create({\n    baseURL,\n    responseType: \"blob\",\n    method: 'GET',\n\n});\nexport {httpClient,getBlob};\n","import {\n    CHANGE_DIRECTORY,FETCH_DIRECTORY,\n} from \"../types/action\";\n\nimport {DIRECTORIES} from \"../config\";\nimport {httpClient} from \"../config/api\";\n\n\n\nconst fetchDirectoryContent = () => (dispatch,getState) => {\n\n    let dir = getState().directory.currentDirectory\n\n    const root = 'root'\n\n    if(dir.indexOf('/')!==-1) {\n        dir = dir.replaceAll('/', '%2F')\n    }\n    const directory = `${root}%2F${dir}`\n\n    const endpoint = `${DIRECTORIES}/${directory}`;\n\n    httpClient.get(endpoint).then(res => {\n        dispatch(fetchDirectoryContentSucceeded(res.data,dir))\n    })\n}\n\nconst fetchDirectoryContentSucceeded = (content,dir) => (\n    {\n        type: FETCH_DIRECTORY,\n        payload: {\n            content,\n            directory:dir\n        }\n    })\n\nconst changeDirectory = (dir) => (dispatch) => {\n    dispatch({\n        type: CHANGE_DIRECTORY,\n        payload: {\n            directory:dir\n        }\n    })\n    dispatch(fetchDirectoryContent())\n}\nexport { fetchDirectoryContent,changeDirectory};\n","export const DIRECTORIES = '/directories';\n","export const CHANGE_DIRECTORY = 'CHANGE_DIRECTORY'\nexport const FETCH_DIRECTORY = 'FETCH_DIRECTORY'\n","export const LS = 'ls';\nexport const CD = 'cd';\nexport const HELP = 'help';\nexport const HISTORY = 'history';\nexport const CLEAR = 'clear';\nexport const CAT = 'cat';\nexport const DOWNLOAD = 'download';\nexport const LS_HELP = ' ls: List all files and folders in this directory'\nexport const CD_HELP = [' cd:', 'cd .. : Move up one level from the current directory','cd [FOLDER]: Change directory to this folder']\nexport const HISTORY_HELP = ' history: List all commands used'\nexport const CLEAR_HELP = ' clear: Clear terminal from all commands'\nexport const CAT_HELP = 'cat [FILE]: print the content of the file (only txt files)'\nexport const DOWNLOAD_HELP = 'download [FILE]: download the file that you want'\nexport const NOT_FOUND = 'command not found'\nexport const DIR_NOT_FOUND = 'No such directory'\nexport const IS_NOT_A_FILE = \"Is not a file\"\n","import React, {useState} from 'react';\nimport {TextField, makeStyles, createMuiTheme, Box, ThemeProvider} from '@material-ui/core';\nimport {useDispatch} from 'react-redux';\nimport './TerminalShell.css'\nimport {\n    sendCommand,\n    sendEmptyCommand,\n    sendCommandNotFound,\n    sendClearCommand,\n    sendHistoryCommand,\n    sendLSCommand,\n    sendCDCommand,\n    sendCatCommand,\n    sendDownloadCommand,\n    sendHelpCommand\n} from '../../actions'\nimport {\n    CD_HELP,\n    HELP,\n    LS,\n    LS_HELP,\n    HISTORY_HELP,\n    CAT_HELP,\n    CLEAR_HELP,\n    CLEAR,\n    HISTORY,\n    CD,\n    CAT, DOWNLOAD, DOWNLOAD_HELP\n} from \"../../types/commands\";\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiInputBase: {\n            input: {\n                fontFamily: 'Fira Code',\n                color: 'white',\n                width: '100%',\n            }\n        }\n    }\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n    directory: {\n        color: '#00a8e8'\n    },\n    variable: {\n        marginRight: 0\n    },\n    cmd: {\n        color: \"white\",\n        height: 20,\n        flex: '1',\n\n    },\n    user: {\n        flex: '0 1 auto',\n        overflow: 'hidden',\n        marginRight: 10\n    },\n    prompt: {\n        alignItems: 'flex-start',\n        fontFamily: 'Fira Code',\n\n    }\n}))\nconst CommandLine = ({cmdProps}) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [command,setCommand] = useState(cmdProps.cmd);\n    const args = cmdProps.args\n    const directory = cmdProps.dir\n    const status = !cmdProps.status;\n    const handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            setCommand('')\n            const line = e.target.value\n            const words = line.split(' ');\n            const cmd = words[0];\n            const arg = line.slice(cmd.length+1);\n            dispatch(sendCommand(words[0], arg, false, true));\n\n\n            switch(cmd) {\n                case HELP:\n                    dispatch(sendHelpCommand([LS_HELP,CD_HELP,HISTORY_HELP,CAT_HELP,CLEAR_HELP,DOWNLOAD_HELP]))\n                    break;\n                case LS:\n                    dispatch(sendLSCommand())\n                    break;\n                case HISTORY:\n                    dispatch(sendHistoryCommand())\n                    break;\n                case CLEAR:\n                    dispatch(sendClearCommand())\n                    break;\n                case CD:\n                    dispatch(sendCDCommand(arg))\n                    break;\n                case CAT:\n                    dispatch(sendCatCommand(arg))\n                    break;\n                case DOWNLOAD:\n                    dispatch(sendDownloadCommand(arg))\n                    break;\n                case '':\n                    dispatch(sendEmptyCommand())\n                    break;\n                default:\n                    dispatch(sendCommandNotFound(cmd))\n            }\n\n\n        }\n    }\n\n    const handleChange = (event) => {\n        setCommand(event.target.value);\n    };\n\n    return (\n        <Box display=\"flex\" flexdirection=\"row\" className={classes.prompt}>\n            <Box className={classes.user}>\n                <span>root@HadiKhai: </span>\n                <span className={classes.directory}> ~{directory}</span>\n                <span className={classes.variable}>$ </span>\n            </Box>\n            <Box className={classes.cmd}>\n                <ThemeProvider theme={theme}>\n                    <TextField\n                        fullWidth\n                        id=\"cmd\"\n                        spellCheck=\"false\"\n                        autoComplete='off'\n                        value={status? `${command} ${args}` : command}\n                        onChange={handleChange}\n                        disabled={status}\n                        onKeyUp={handleKeyPress}\n                        height={20}\n                        className={classes.textField}\n                        InputProps={{\n                            style: {\n                                height: 20,\n                                padding: '0 0 0 0',\n                            },\n                            disableUnderline: true,\n                        }}\n                    />\n                </ThemeProvider>\n            </Box>\n        </Box>\n    )\n\n\n}\n\nexport default CommandLine;\n","import {\n    SEND_CMD,\n    COMMAND_NOT_FOUND,\n    COMMAND_EMPTY,\n    CLEAR_CMD,\n    COMMAND_COMPLETED, DIRECTORY_NOT_FOUND, FILE_NOT_FOUND\n} from \"../types/action\";\nimport {CAT, CD, CLEAR, DIR_NOT_FOUND, DOWNLOAD, HELP, HISTORY, IS_NOT_A_FILE, LS, NOT_FOUND} from \"../types/commands\";\nimport {changeDirectory} from \"./directory\";\nimport {DIRECTORIES, getBlob,httpClient} from \"../config\";\n\nconst sendCommand = (cmd,args,status,show) => (dispatch,getState) =>{\n\n    const dir = getState().directory.currentDirectory;\n    dispatch({\n        type: SEND_CMD,\n        payload: {\n            cmd,\n            args,\n            dir,\n            status,\n            show\n        }\n    })\n}\n\nconst sendClearCommand = () => dispatch => {\n    dispatch({\n        type: CLEAR_CMD,\n    })\n    dispatch({\n        type: COMMAND_COMPLETED,\n        payload: {\n            content: '',\n            cmd: CLEAR\n        }\n    })\n}\n\nconst sendLSCommand = () =>  (dispatch,getState) => {\n    const content = getState().directory.content;\n\n    dispatch({\n        type:COMMAND_COMPLETED,\n        payload: {\n            cmd: LS,\n            content\n        }\n    })\n}\n\nconst sendHelpCommand = (content) => dispatch => {\n    dispatch({\n        type:COMMAND_COMPLETED,\n        payload: {\n            cmd: HELP,\n            content\n        }\n    })\n}\n\nconst sendCatCommand = (file) => (dispatch,getState) => {\n        const content = getState().directory.content;\n        let currentDirectory = getState().directory.currentDirectory;\n        const root = 'root'\n\n        if(content.includes(file) && file.endsWith('txt')) {\n            if(currentDirectory.indexOf('/')!==-1) {\n                currentDirectory = currentDirectory.replaceAll('/', '%2F')\n            }\n            let directory = `${root}%2F${currentDirectory}%2F${file}`\n\n            if(currentDirectory==='') {\n                 directory = `${root}%2F${file}`\n            }\n            const endpoint = `${DIRECTORIES}/${directory}/read`;\n            httpClient.get(endpoint).then(res => {\n                dispatch({\n                    type: COMMAND_COMPLETED,\n                    payload: {\n                        cmd: CAT,\n                        content:res.data,\n                        error: false\n                    }\n\n                })\n            })\n        }\n        else {\n            dispatch({\n                type: FILE_NOT_FOUND,\n                payload: {\n                    cmd: CAT,\n                    content: IS_NOT_A_FILE,\n                    dirOrFile:file,\n                    error:true\n                }\n            })\n        }\n\n    }\n\nconst sendDownloadCommand = (file) => (dispatch,getState) => {\n    const content = getState().directory.content;\n    let currentDirectory = getState().directory.currentDirectory;\n    const root = 'root'\n\n    if(content.includes(file) && (file.endsWith('pdf') || file.endsWith('txt') || file.endsWith('jpeg'))) {\n        if(currentDirectory.indexOf('/')!==-1) {\n            currentDirectory = currentDirectory.replaceAll('/', '%2F')\n        }\n        let directory = `${root}%2F${currentDirectory}%2F${file}`\n\n        if(currentDirectory==='') {\n            directory = `${root}%2F${file}`\n        }\n        const endpoint = `${DIRECTORIES}/${directory}/download`;\n        getBlob.get(endpoint).then(res => {\n            const downloadUrl = window.URL.createObjectURL(new Blob([res.data]));\n            const link = document.createElement('a');\n\n            link.href = downloadUrl;\n\n            link.setAttribute('download', file); //any other extension\n\n            document.body.appendChild(link);\n\n            link.click();\n\n            link.remove();\n\n\n            dispatch({\n                type: COMMAND_COMPLETED,\n                payload: {\n                    cmd: DOWNLOAD,\n                    content: res.data,\n                    error: false\n                }\n\n            })\n        })\n\n    }\n    else {\n        dispatch({\n            type: FILE_NOT_FOUND,\n            payload: {\n                cmd: DOWNLOAD,\n                content: IS_NOT_A_FILE,\n                dirOrFile:file,\n                error:true\n            }\n        })\n    }\n\n}\n\nconst sendHistoryCommand = () => (dispatch,getState) => {\n    const history = getState().commands.map(data => data.cmd);\n\n    dispatch({\n        type: COMMAND_COMPLETED,\n        payload: {\n            content: history,\n            cmd: HISTORY\n        }\n    })\n}\n\nconst sendCDCommand = (dir) => (dispatch,getState) => {\n\n    const content = getState().directory.content;\n    const currentDirectory = getState().directory.currentDirectory;\n    if(dir==='..'){\n        const index = currentDirectory.lastIndexOf('/')\n            if(index===-1){\n                dispatch(changeDirectory(''))\n            }\n            else{\n                const newDir = currentDirectory.slice(0,index);\n                dispatch(changeDirectory(newDir))\n            }\n    }\n    else if(dir.endsWith('txt') || !content.includes(dir)){\n        dispatch({\n            type: DIRECTORY_NOT_FOUND,\n            payload: {\n                cmd: CD,\n                content: DIR_NOT_FOUND,\n                dirOrFile:dir,\n                error:true\n            }\n        })\n        return\n    }\n    else{\n        const newDir = `${currentDirectory}/${dir}`;\n        dispatch(changeDirectory(newDir))\n    }\n\n    dispatch({\n        type:COMMAND_COMPLETED,\n        payload: {\n            cmd: CD,\n        }\n    })\n}\n\nconst sendCommandNotFound = (cmd) => dispatch => {\n    dispatch({\n        type: COMMAND_NOT_FOUND,\n        payload: {\n            content: NOT_FOUND,\n            cmd\n        }\n    })\n}\n\nconst sendEmptyCommand = () => dispatch => {\n    dispatch({\n        type: COMMAND_EMPTY\n    })\n}\n\n\nexport {sendCommand,sendEmptyCommand,sendCommandNotFound,sendClearCommand,sendHistoryCommand,sendLSCommand,sendCDCommand,sendCatCommand,sendDownloadCommand,sendHelpCommand};\n\n","export const SEND_CMD = 'SEND_CMD';\nexport const CLEAR_CMD = 'CLEAR_CMD'\nexport const HISTORY_CMD = 'HISTORY_CMD'\nexport const LS_CMD = 'LS_CMD'\nexport const CAT_CMD = 'CAT_CMD'\n","export const COMMAND_COMPLETED = 'COMMAND_COMPLETED'\nexport const COMMAND_FAILED = 'COMMAND_FAILED'\n","export const COMMAND_EMPTY = 'COMMAND_EMPTY';\nexport const COMMAND_NOT_FOUND = 'COMMAND_NOT_FOUND';\nexport const DIRECTORY_NOT_FOUND = 'DIRECTORY_NOT_FOUND'\nexport const FILE_NOT_FOUND = \"FILE_NOT_FOUND\"\n","import React from 'react';\nimport {makeStyles, Box} from '@material-ui/core';\nimport './TerminalShell.css'\nimport {CAT, CD, DOWNLOAD, HELP, HISTORY, LS} from \"../../types/commands\";\n\nconst useStyles = makeStyles(() => ({\n    prompt: {\n        color: \"white\",\n        alignItems: 'flex-start'\n    },\n    response: {\n        color: \"white\",\n        fontFamily: 'Fira Code'\n    },\n    file: {\n        color: 'white',\n        marginRight: 10\n    },\n    pdf: {\n        color: '#67e8b2',\n        marginRight: 10\n    },\n    folder: {\n        color: '#00A8E8',\n        marginRight: 10\n    },\n    photo:{\n        color: '#e8e060',\n        marginRight: 10\n    }\n}))\n\nconst CommandResponse = ({responseProps,componentId}) => {\n    const classes = useStyles();\n\n    const command = responseProps? responseProps.cmd:'';\n    const content = responseProps? responseProps.content:[];\n    const error = responseProps? responseProps.error:false;\n    const dirOrFile = responseProps? responseProps.dirOrFile:'';\n    const Response = () => {\n        switch(command) {\n            case HELP: {\n                const help = [];\n                content.forEach( (commandDescription,i) => {\n                    if(typeof commandDescription === 'string'){\n                        help.push(<li key={`${componentId}-${i}`}>{commandDescription}</li>)\n                    }\n                    console.log(commandDescription)\n                    if(typeof commandDescription === 'object'){\n                        help.push(<li key={`${componentId}-${i}`}>{commandDescription[0]}</li>)\n                        help.push(<ul key={`${componentId}-${i}-ul`}>\n                           { [...commandDescription].splice(1).map((e,j) =>\n                                <li key={`${componentId}-${i}-${j}`}>{e}</li>\n                            )}\n                        </ul>)\n                    }\n                })\n                return (\n                    <ul key={componentId}>\n                        {help}\n                    </ul>\n                )\n            }\n            case LS:{\n                const folderAndFiles = [];\n                content.forEach((item,i) => {\n                    if(item.endsWith('.txt')){\n                        folderAndFiles.push(\n                            <span key={`${componentId}-${i}`} className={classes.file}>{item}</span>\n                        )\n                    }\n                    else if(item.endsWith('.pdf')){\n                        folderAndFiles.push(\n                            <span key={`${componentId}-${i}`} className={classes.pdf}>{item}</span>\n                        )\n                    }\n                    else if(item.endsWith('.jpeg')){\n                        folderAndFiles.push(\n                            <span  key={`${componentId}-${i}`}className={classes.photo}>{item}</span>\n                        )\n                    }\n                    else{\n                        folderAndFiles.push(<span  key={`${componentId}-${i}`} className={classes.folder}>{item}</span>);\n                    }\n\n                })\n                return (\n                    <p key={componentId}>{folderAndFiles}</p>\n                )\n            }\n\n            case HISTORY:{\n                const history = []\n\n                for(let i=0; i<content.length; i++){\n                    history.push(<span  key={`${componentId}-${i}`}>{i+1} {content[i]} <br /></span>)\n                }\n                return (\n                    <p key={componentId}>\n                        {history}\n                    </p>\n                )\n            }\n            case CD:\n                if(error){\n                    return (\n                     <p key={componentId}>{command}: {dirOrFile}: {content}</p>\n                    )\n                }\n                return (\n                    <div key={componentId}></div>\n                )\n            case DOWNLOAD:\n                if(error){\n                    return (\n                        <p key={componentId}>{command}: {dirOrFile}: {content}</p>\n                    )\n                }\n                return (\n                    <div key={componentId}></div>\n                )\n            case CAT:\n                if(error){\n                    return (\n                        <p key={componentId}>{command}: {dirOrFile}: {content}</p>\n                    )\n                }\n                const links = [];\n\n                content.forEach((link,i) =>{\n                    links.push(<span key={`${componentId}-${i}`}>{link} <br /> </span>)\n                })\n\n                return (\n                    <p key={componentId}>{links}</p>\n                )\n            case '':\n                return (\n                    <div key={componentId}></div>\n                )\n            default:\n                return <p key={componentId}>{command}: {content}</p>\n        }\n    }\n\n    return (\n        <Box display=\"flex\" flexdirection=\"row\" className={classes.prompt}>\n            <Box className={classes.cmd}>\n                <span>\n\n                    {Response()}\n\n                </span>\n            </Box>\n        </Box>\n    )\n\n\n}\n\nexport default CommandResponse;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Box from \"@material-ui/core/Container\";\nimport CommandLine from \"./CommandLine\";\nimport CommandResponse from \"./CommandResponse\";\n\nimport './TerminalShell.css';\n\nconst useStyles = makeStyles((theme) => ({\n    main: {\n        textAlign: 'left',\n        fontFamily: 'Fira Code',\n        overflow: 'auto',\n        width: '100%',\n        padding: 2,\n        background: '#007EA7',\n        color: '#00171F',\n        borderRadius: '0 0 10px 10px',\n        height: '80vh'\n\n    },\n    welcome: {\n        textAlign: 'center',\n\n        padding: '0',\n    },\n    shell: {\n        marginTop: 10\n    },\n    directory: {\n        color: '#00a8e8'\n    },\n    variable: {\n        marginRight: 10\n    },\n    help: {\n        color: \"white\"\n\n    },\n    line: {\n        width: '100%',\n    },\n    personal:{\n        color: '#00A8E8',\n\n    }\n}))\n\nconst TerminalShell = () => {\n    const classes = useStyles();\n    const commands = useSelector(state => state.commands);\n    const responses = useSelector(state => state.responses);\n    const currentDirectory = useSelector(state => state.directory.currentDirectory);\n    const CMD = () => {\n        const rows = [];\n        commands.forEach((command,i)=>{\n                if(command.show) {\n                    rows.push(\n                        <div key={`LineAndResponse-${i}`}>\n                            <CommandLine cmdProps={command} key={`Line-${i}`}/>\n                            <CommandResponse responseProps={responses[i]} key={`Response-${i}`} componentId={`Response-${i}`}/>\n                        </div>\n                    )\n                }\n            }\n        )\n        return (<div>\n            {rows}\n        </div>)\n    }\n\n    const prompt = () => {\n        const conditions = {\n            cmd: '',\n            args: '',\n            dir: currentDirectory,\n            status: true,\n            shown: true\n        }\n\n        return (\n            <CommandLine cmdProps={conditions} key={`LineInput`}/>\n        )\n    }\n\n    return (\n        <Box display=\"flex\" align=\"center\" flexdirection=\"column\" className={classes.main}>\n            <Box>\n                <p className={classes.welcome}>\n                    <span>Hello World! Welcome to HadiKhai's CLI! To get started type '<span className={classes.help}>help</span>'<br /></span>\n                    <span>Inside the <span className={classes.personal}>personal</span> folder you can find my CV and some other files. Enjoy!</span>\n\n                </p>\n            </Box>\n            <Box className={classes.shell}>\n                {CMD()}\n                {prompt()}\n            </Box>\n        </Box>\n    )\n}\n\nexport default TerminalShell;\n\n","import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from \"@material-ui/core/Container\";\nimport TerminalHeader from \"./TerminalHeader\";\nimport TerminalShell from \"./TerminalShell\";\nimport {useDispatch} from \"react-redux\";\nimport {fetchDirectoryContent} from \"../../actions\";\n\nconst useStyles = makeStyles(() => ({\n    main:{\n        marginBottom: 50\n    }\n}));\n\nconst Terminal = () => {\n    const dispatch = useDispatch();\n\n    useEffect( ()=> {\n        dispatch(fetchDirectoryContent())}\n    )\n\n\n    const classes = useStyles();\n    return (\n        <Box display=\"flex\" align=\"center\" flexdirection=\"column\" className={classes.main}>\n                <TerminalHeader />\n                <TerminalShell />\n        </Box>\n    )\n};\n\n\nexport default Terminal;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    main: {\n        color: 'white',\n        height: '100%',\n        width: '100%',\n    },\n}))\nconst Footer = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.main}>\n            <p> Made By HadiKhai</p>\n            <p> With React.JS</p>\n        </div>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Terminal from \"./terminal/Terminal\";\nimport Box from \"@material-ui/core/Container\";\nimport Footer from \"./footer/Footer\";\nconst useStyles = makeStyles((theme) => ({\n    main: {\n        background: '#003459',\n        height: '100%',\n        width: '100%',\n        fontFamily: 'Fira Code',\n        marginTop: '5vh',\n    }\n}))\nconst App = () => {\n\n    const classes = useStyles();\n\n    return (\n            <Box container='true' display=\"flex\" align=\"center\" flexdirection=\"column\" className={classes.main}>\n                    <Terminal/>\n                    <Footer/>\n            </Box>\n    )\n}\n\nexport default App;\n","import {CHANGE_DIRECTORY, FETCH_DIRECTORY} from \"../types/action\";\n\nconst initialStateCurrentDirectory = {\n    currentDirectory:'',\n    content:[]\n}\n\nexport default (state = initialStateCurrentDirectory,action) => {\n    switch(action.type) {\n        case CHANGE_DIRECTORY:\n            return {\n                ...state,\n                currentDirectory: action.payload.directory\n            }\n        case FETCH_DIRECTORY:{\n            return {\n                ...state,\n                content: action.payload.content\n            }\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport commands from './commands';\nimport directory from './directory';\nimport responses from './responses';\n\nexport default combineReducers({\n    commands,\n    responses,\n    directory\n})\n","import {SEND_CMD,CLEAR_CMD} from \"../types/action\";\n\n\nexport default (state = [] ,action) => {\n    switch (action.type){\n        case SEND_CMD:\n            return [...state, action.payload];\n        case CLEAR_CMD:\n            return state.map(commands =>\n                (\n                    {\n                        ...commands,\n                        show: false\n                    }\n                  )\n            )\n        default:\n            return state;\n    }\n\n}\n","import {\n    COMMAND_COMPLETED,\n    COMMAND_FAILED,\n    COMMAND_NOT_FOUND,\n    COMMAND_EMPTY,\n    DIRECTORY_NOT_FOUND, FILE_NOT_FOUND\n} from '../types/action'\n\nexport default  (state = [], action) => {\n    switch (action.type) {\n        case COMMAND_COMPLETED:\n            return[\n                ...state,\n                {\n                    error: action.payload.error,\n                    cmd: action.payload.cmd,\n                    content: action.payload.content\n                }\n\n            ];\n        case COMMAND_FAILED:\n            return [\n                ...state,\n                {\n                    cmd: action.payload.cmd,\n                    error: action.payload.error\n                }\n            ];\n        case COMMAND_NOT_FOUND:\n            return [\n                ...state,\n                {\n                    cmd: action.payload.cmd,\n                    content: action.payload.content,\n                    error: true\n                }\n            ];\n        case COMMAND_EMPTY:\n            return [\n                ...state,\n                {\n                    cmd: '',\n                    content: '',\n                    error: true\n                }\n            ];\n        case DIRECTORY_NOT_FOUND:\n            return [\n                ...state,\n                {\n                    cmd: action.payload.cmd,\n                    content: action.payload.content,\n                    dirOrFile: action.payload.dirOrFile,\n                    error:action.payload.error\n                }\n            ]\n        case FILE_NOT_FOUND:\n            return [\n                ...state,\n                {\n                    cmd: action.payload.cmd,\n                    content: action.payload.content,\n                    dirOrFile: action.payload.dirOrFile,\n                    error:action.payload.error\n\n                }\n            ]\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport reducers from './reducers';\nimport './index.css'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunk)))\n\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>\n    ,document.querySelector('#root')\n)\n"],"sourceRoot":""}